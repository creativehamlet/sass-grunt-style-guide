
// Circle content - sometimes paddings vary so define specific $p* parameters
@mixin circle-content($pt, $pr, $pb, $pl) {
    border-radius: 50%;
    padding-top: $pt;
    padding-right: $pr;
    padding-bottom: $pb;
    padding-left: $pl;
    line-height: 0em;
    font: $font;
    font-size: $font-size-large;
}

// Middle earth is a line going through center of another object horizantally
// TODO make vertical parameter
@mixin middle-earth($bpos, $height, $left, $valign, $vsize, $width: 100%) {
    content: '';
    position: absolute;
    border-#{$bpos}: 3px solid;
    height: $height;
    width: $width;
    transform: translateY(-50%);
    left: $left;
    #{$valign}: $vsize;
}

// Border content
@mixin border-content($state, $class) {
  &:#{$state} {
    content: '';

    @extend .#{$class};

    display: block;
    height: 5px;
    width: 100%;
    margin-bottom: 30px;
  }
}

@function black($opacity) {
  @return rgba(0, 0, 0, $opacity);
}

@function white($opacity) {
  @return rgba(255, 255, 255, $opacity);
}

@mixin icon-placement($icon-location, $icon-orientation, $icon-color, $icon-top, $icon-x, $icon-name) {
  position: relative;
  &:#{$icon-location} {
    position: absolute;
    font-family: FontAwesome;
    color: $icon-color;
    top: $icon-top;
    #{$icon-orientation}: $icon-x;
    content: $icon-name;
  }
}

@mixin font-smoothing($value: antialiased) {
  -webkit-font-smoothing: $value;
}

@mixin vertical-align($position: relative) {
  position: $position;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

@mixin content-box {
  @include box-sizing(content-box);
}

@mixin border-box {
  @include box-sizing(border-box);
}

@mixin padding-start($padding) {
  -webkit-padding-start: $padding;
  -moz-padding-start: $padding;
  -o-padding-start: $padding;
  padding-start: $padding;
}

@mixin padding-end($padding) {
  -webkit-padding-end: $padding;
  -moz-padding-end: $padding;
  -o-padding-end: $padding;
  padding-end: $padding;
}

@mixin margin-before($padding) {
  -webkit-margin-before: $padding;
  -moz-margin-before: $padding;
  -o-margin-before: $padding;
  margin-before: $padding;
}

@mixin margin-after($padding) {
  -webkit-margin-after: $padding;
  -moz-margin-after: $padding;
  -o-margin-after: $padding;
  margin-after: $padding;
}

@mixin margin-start($padding) {
  -webkit-margin-start: $padding;
  -moz-margin-start: $padding;
  -o-margin-start: $padding;
  margin-start: $padding;
}

@mixin clearfix {
  &:before,
  &:after {
    content: " ";

    /* 1 */
    display: table;

    /* 2 */
  }

  &:after {
    clear: both;
  }
}

// WebKit-style focus
@mixin tab-focus {
  // Default
  outline: thin dotted #333;

  // WebKit
  outline: 5px auto -webkit-focus-ring-color;
  outline-offset: -2px;
}

// Center-align a block level element
@mixin center-block {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

// Sizing shortcuts
@mixin size($width, $height) {
  width: $width;
  height: $height;
}

@mixin square($size) {
  @include size($size, $size);
}

@mixin list-works($list-font-size, $list-line-height, $list-min-width) {
  font-size: $list-font-size;
  line-height: $list-line-height;
  min-width: $list-min-width;
}

// Placeholder text
@mixin placeholder($color: $input-color-placeholder) {
  &:-moz-placeholder {
    color: $color;
  }

  // Firefox 4-18
  &::-moz-placeholder {
    color: $color;
  }

  // Firefox 19+
  &:-ms-input-placeholder {
    color: $color;
  }

  // Internet Explorer 10+
  &::-webkit-input-placeholder {
    color: $color;
  }

  // Safari and Chrome
}

// CSS3 PROPERTIES
// --------------------------------------------------

@mixin border-radius($radius) {
  -moz-border-radius: $radius !important;
  border-radius: $radius !important;
}

// Single side border-radius
@mixin border-top-radius($radius) {
  border-top-right-radius: $radius;
  border-top-left-radius: $radius;
}

@mixin border-right-radius($radius) {
  border-bottom-right-radius: $radius;
  border-top-right-radius: $radius;
}

@mixin border-bottom-radius($radius) {
  border-bottom-right-radius: $radius;
  border-bottom-left-radius: $radius;
}

@mixin border-left-radius($radius) {
  border-bottom-left-radius: $radius;
  border-top-left-radius: $radius;
}

// Drop shadows
@mixin box-shadow($shadow) {
  -webkit-box-shadow: $shadow;
  box-shadow: $shadow;
}

// Transitions
@mixin transition($transition) {
  -webkit-transition: $transition;
  transition: $transition;
}

@mixin transition-property($transition-property) {
  -webkit-transition-property: $transition-property;
  transition-property: $transition-property;
}

@mixin transition-delay($transition-delay) {
  -webkit-transition-delay: $transition-delay;
  transition-delay: $transition-delay;
}

@mixin transition-duration($transition-duration: 0.5s) {
  -webkit-transition-duration: $transition-duration;
  transition-duration: $transition-duration;
}

@mixin transition-transform($transition) {
  -webkit-transition: -webkit-transform $transition;
  -moz-transition: -moz-transform $transition;
  -ms-transform: -ms-transform $transition;
  -o-transition: -o-transform $transition;
  transition: transform $transition;
}

// Transformations
@mixin rotate($degrees) {
  -webkit-transform: rotate($degrees);
  -ms-transform: rotate($degrees);

  // IE9+
  transform: rotate($degrees);
}

@mixin scale($ratio) {
  -webkit-transform: scale($ratio);
  -ms-transform: scale($ratio);

  // IE9+
  transform: scale($ratio);
}

@mixin translate($x, $y) {
  -webkit-transform: translate($x, $y);
  -ms-transform: translate($x, $y);

  // IE9+
  transform: translate($x, $y);
}

@mixin skew($x, $y) {
  -webkit-transform: skew($x, $y);
  -ms-transform: skew-x($x) skew-y($y);

  // See https://github.com/twbs/bootstrap/issues-/4885; IE9+
  transform: skew($x, $y);
}

// Mixin with !important condition to overwrite material translate3d 'default: false'
@mixin translate3d($x, $y, $z, $is_imp: false) {
    @if $is_imp == false {
        -webkit-transform: translate3d($x, $y, $z);
        transform: translate3d($x, $y, $z);
    }
    @else {
        -webkit-transform: translate3d($x, $y, $z) !important;
        transform: translate3d($x, $y, $z) !important;
    }
}

@mixin rotateX($degrees) {
  -webkit-transform: rotateX($degrees);
  -ms-transform: rotateX($degrees);

  // IE9+
  transform: rotateX($degrees);
}

@mixin rotateY($degrees) {
  -webkit-transform: rotateY($degrees);
  -ms-transform: rotateY($degrees);

  // IE9+
  transform: rotateY($degrees);
}

@mixin perspective($perspective) {
  -webkit-perspective: $perspective;
  -moz-perspective: $perspective;
  perspective: $perspective;
}

@mixin perspective-origin($perspective) {
  -webkit-perspective-origin: $perspective;
  -moz-perspective-origin: $perspective;
  perspective-origin: $perspective;
}

@mixin transform-origin($origin) {
  -webkit-transform-origin: $origin;
  -moz-transform-origin: $origin;
  transform-origin: $origin;
}

// Animations
@mixin animation($animation) {
  -webkit-animation: $animation;
  animation: $animation;
}

@mixin animation-duration($duration) {
  -webkit-animation: $duration;
  animation: $duration;
}

@mixin animation-delay($delay) {
  -webkit-animation: $delay;
  animation: $delay;
}

@mixin animation-name($name) {
  -webkit-animation: $name;
  animation: $name;
}

// Backface visibility
// Prevent browsers from flickering when using CSS 3D transforms.
// Default value is `visible`, but can be changed to `hidden`
@mixin backface-visibility($visibility) {
  -webkit-backface-visibility: $visibility;
  -moz-backface-visibility: $visibility;
  backface-visibility: $visibility;
}

// Box sizing
@mixin box-sizing($boxmodel) {
  -webkit-box-sizing: $boxmodel;
  -moz-box-sizing: $boxmodel;
  box-sizing: $boxmodel;
}

// User select
// For selecting text on the page
@mixin user-select($select) {
  -webkit-user-select: $select;
  -moz-user-select: $select;
  -ms-user-select: $select;

  // IE10+
  -o-user-select: $select;
  user-select: $select;
}

// Resize anything
@mixin resizable($direction) {
  resize: $direction;

  // Options: horizontal, vertical, both
  overflow: auto;

  // Safari fix
}

// Optional hyphenation
@mixin hyphens($mode: auto) {
  word-wrap: break-word;
  -webkit-hyphens: $mode;
  -moz-hyphens: $mode;
  -ms-hyphens: $mode;

  // IE10+
  -o-hyphens: $mode;
  hyphens: $mode;
}

// Opacity
@mixin opacity($opacity) {
  opacity: $opacity;

  // IE8 filter
  $opacity-ie: $opacity * 100;

  filter: unquote("alpha(opacity=#{$opacity-ie})");
}

// Responsive image
//
// Keep images from scaling beyond the width of their parents.
@mixin img-responsive($display: block) {
  display: $display;
  max-width: 100%;

  // Part 1: Set a maximum relative to the parent
  height: auto;

  // Part 2: Scale the height according to the width, otherwise you get stretching
}

// Button sizes
// -------------------------
@mixin button-size($padding-vertical, $padding-horizontal, $font-size, $line-height, $border-radius) {
  padding: $padding-vertical $padding-horizontal;
  font-size: $font-size;
  line-height: $line-height;
  border-radius: $border-radius;
}